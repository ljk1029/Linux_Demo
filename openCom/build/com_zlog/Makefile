# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build/CMakeFiles /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build/com_zlog//CMakeFiles/progress.marks
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 com_zlog/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 com_zlog/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 com_zlog/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 com_zlog/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
com_zlog/CMakeFiles/my_zlog.dir/rule:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 com_zlog/CMakeFiles/my_zlog.dir/rule
.PHONY : com_zlog/CMakeFiles/my_zlog.dir/rule

# Convenience name for target.
my_zlog: com_zlog/CMakeFiles/my_zlog.dir/rule
.PHONY : my_zlog

# fast build rule for target.
my_zlog/fast:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/build
.PHONY : my_zlog/fast

demo_zlog.o: demo_zlog.c.o
.PHONY : demo_zlog.o

# target to build an object file
demo_zlog.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/demo_zlog.c.o
.PHONY : demo_zlog.c.o

demo_zlog.i: demo_zlog.c.i
.PHONY : demo_zlog.i

# target to preprocess a source file
demo_zlog.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/demo_zlog.c.i
.PHONY : demo_zlog.c.i

demo_zlog.s: demo_zlog.c.s
.PHONY : demo_zlog.s

# target to generate assembly for a file
demo_zlog.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/demo_zlog.c.s
.PHONY : demo_zlog.c.s

libzlog/src/buf.o: libzlog/src/buf.c.o
.PHONY : libzlog/src/buf.o

# target to build an object file
libzlog/src/buf.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/buf.c.o
.PHONY : libzlog/src/buf.c.o

libzlog/src/buf.i: libzlog/src/buf.c.i
.PHONY : libzlog/src/buf.i

# target to preprocess a source file
libzlog/src/buf.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/buf.c.i
.PHONY : libzlog/src/buf.c.i

libzlog/src/buf.s: libzlog/src/buf.c.s
.PHONY : libzlog/src/buf.s

# target to generate assembly for a file
libzlog/src/buf.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/buf.c.s
.PHONY : libzlog/src/buf.c.s

libzlog/src/category.o: libzlog/src/category.c.o
.PHONY : libzlog/src/category.o

# target to build an object file
libzlog/src/category.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/category.c.o
.PHONY : libzlog/src/category.c.o

libzlog/src/category.i: libzlog/src/category.c.i
.PHONY : libzlog/src/category.i

# target to preprocess a source file
libzlog/src/category.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/category.c.i
.PHONY : libzlog/src/category.c.i

libzlog/src/category.s: libzlog/src/category.c.s
.PHONY : libzlog/src/category.s

# target to generate assembly for a file
libzlog/src/category.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/category.c.s
.PHONY : libzlog/src/category.c.s

libzlog/src/category_table.o: libzlog/src/category_table.c.o
.PHONY : libzlog/src/category_table.o

# target to build an object file
libzlog/src/category_table.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/category_table.c.o
.PHONY : libzlog/src/category_table.c.o

libzlog/src/category_table.i: libzlog/src/category_table.c.i
.PHONY : libzlog/src/category_table.i

# target to preprocess a source file
libzlog/src/category_table.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/category_table.c.i
.PHONY : libzlog/src/category_table.c.i

libzlog/src/category_table.s: libzlog/src/category_table.c.s
.PHONY : libzlog/src/category_table.s

# target to generate assembly for a file
libzlog/src/category_table.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/category_table.c.s
.PHONY : libzlog/src/category_table.c.s

libzlog/src/conf.o: libzlog/src/conf.c.o
.PHONY : libzlog/src/conf.o

# target to build an object file
libzlog/src/conf.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/conf.c.o
.PHONY : libzlog/src/conf.c.o

libzlog/src/conf.i: libzlog/src/conf.c.i
.PHONY : libzlog/src/conf.i

# target to preprocess a source file
libzlog/src/conf.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/conf.c.i
.PHONY : libzlog/src/conf.c.i

libzlog/src/conf.s: libzlog/src/conf.c.s
.PHONY : libzlog/src/conf.s

# target to generate assembly for a file
libzlog/src/conf.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/conf.c.s
.PHONY : libzlog/src/conf.c.s

libzlog/src/event.o: libzlog/src/event.c.o
.PHONY : libzlog/src/event.o

# target to build an object file
libzlog/src/event.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/event.c.o
.PHONY : libzlog/src/event.c.o

libzlog/src/event.i: libzlog/src/event.c.i
.PHONY : libzlog/src/event.i

# target to preprocess a source file
libzlog/src/event.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/event.c.i
.PHONY : libzlog/src/event.c.i

libzlog/src/event.s: libzlog/src/event.c.s
.PHONY : libzlog/src/event.s

# target to generate assembly for a file
libzlog/src/event.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/event.c.s
.PHONY : libzlog/src/event.c.s

libzlog/src/format.o: libzlog/src/format.c.o
.PHONY : libzlog/src/format.o

# target to build an object file
libzlog/src/format.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/format.c.o
.PHONY : libzlog/src/format.c.o

libzlog/src/format.i: libzlog/src/format.c.i
.PHONY : libzlog/src/format.i

# target to preprocess a source file
libzlog/src/format.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/format.c.i
.PHONY : libzlog/src/format.c.i

libzlog/src/format.s: libzlog/src/format.c.s
.PHONY : libzlog/src/format.s

# target to generate assembly for a file
libzlog/src/format.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/format.c.s
.PHONY : libzlog/src/format.c.s

libzlog/src/level.o: libzlog/src/level.c.o
.PHONY : libzlog/src/level.o

# target to build an object file
libzlog/src/level.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/level.c.o
.PHONY : libzlog/src/level.c.o

libzlog/src/level.i: libzlog/src/level.c.i
.PHONY : libzlog/src/level.i

# target to preprocess a source file
libzlog/src/level.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/level.c.i
.PHONY : libzlog/src/level.c.i

libzlog/src/level.s: libzlog/src/level.c.s
.PHONY : libzlog/src/level.s

# target to generate assembly for a file
libzlog/src/level.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/level.c.s
.PHONY : libzlog/src/level.c.s

libzlog/src/level_list.o: libzlog/src/level_list.c.o
.PHONY : libzlog/src/level_list.o

# target to build an object file
libzlog/src/level_list.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/level_list.c.o
.PHONY : libzlog/src/level_list.c.o

libzlog/src/level_list.i: libzlog/src/level_list.c.i
.PHONY : libzlog/src/level_list.i

# target to preprocess a source file
libzlog/src/level_list.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/level_list.c.i
.PHONY : libzlog/src/level_list.c.i

libzlog/src/level_list.s: libzlog/src/level_list.c.s
.PHONY : libzlog/src/level_list.s

# target to generate assembly for a file
libzlog/src/level_list.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/level_list.c.s
.PHONY : libzlog/src/level_list.c.s

libzlog/src/lockfile.o: libzlog/src/lockfile.c.o
.PHONY : libzlog/src/lockfile.o

# target to build an object file
libzlog/src/lockfile.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/lockfile.c.o
.PHONY : libzlog/src/lockfile.c.o

libzlog/src/lockfile.i: libzlog/src/lockfile.c.i
.PHONY : libzlog/src/lockfile.i

# target to preprocess a source file
libzlog/src/lockfile.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/lockfile.c.i
.PHONY : libzlog/src/lockfile.c.i

libzlog/src/lockfile.s: libzlog/src/lockfile.c.s
.PHONY : libzlog/src/lockfile.s

# target to generate assembly for a file
libzlog/src/lockfile.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/lockfile.c.s
.PHONY : libzlog/src/lockfile.c.s

libzlog/src/mdc.o: libzlog/src/mdc.c.o
.PHONY : libzlog/src/mdc.o

# target to build an object file
libzlog/src/mdc.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/mdc.c.o
.PHONY : libzlog/src/mdc.c.o

libzlog/src/mdc.i: libzlog/src/mdc.c.i
.PHONY : libzlog/src/mdc.i

# target to preprocess a source file
libzlog/src/mdc.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/mdc.c.i
.PHONY : libzlog/src/mdc.c.i

libzlog/src/mdc.s: libzlog/src/mdc.c.s
.PHONY : libzlog/src/mdc.s

# target to generate assembly for a file
libzlog/src/mdc.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/mdc.c.s
.PHONY : libzlog/src/mdc.c.s

libzlog/src/record.o: libzlog/src/record.c.o
.PHONY : libzlog/src/record.o

# target to build an object file
libzlog/src/record.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/record.c.o
.PHONY : libzlog/src/record.c.o

libzlog/src/record.i: libzlog/src/record.c.i
.PHONY : libzlog/src/record.i

# target to preprocess a source file
libzlog/src/record.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/record.c.i
.PHONY : libzlog/src/record.c.i

libzlog/src/record.s: libzlog/src/record.c.s
.PHONY : libzlog/src/record.s

# target to generate assembly for a file
libzlog/src/record.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/record.c.s
.PHONY : libzlog/src/record.c.s

libzlog/src/record_table.o: libzlog/src/record_table.c.o
.PHONY : libzlog/src/record_table.o

# target to build an object file
libzlog/src/record_table.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/record_table.c.o
.PHONY : libzlog/src/record_table.c.o

libzlog/src/record_table.i: libzlog/src/record_table.c.i
.PHONY : libzlog/src/record_table.i

# target to preprocess a source file
libzlog/src/record_table.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/record_table.c.i
.PHONY : libzlog/src/record_table.c.i

libzlog/src/record_table.s: libzlog/src/record_table.c.s
.PHONY : libzlog/src/record_table.s

# target to generate assembly for a file
libzlog/src/record_table.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/record_table.c.s
.PHONY : libzlog/src/record_table.c.s

libzlog/src/rotater.o: libzlog/src/rotater.c.o
.PHONY : libzlog/src/rotater.o

# target to build an object file
libzlog/src/rotater.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/rotater.c.o
.PHONY : libzlog/src/rotater.c.o

libzlog/src/rotater.i: libzlog/src/rotater.c.i
.PHONY : libzlog/src/rotater.i

# target to preprocess a source file
libzlog/src/rotater.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/rotater.c.i
.PHONY : libzlog/src/rotater.c.i

libzlog/src/rotater.s: libzlog/src/rotater.c.s
.PHONY : libzlog/src/rotater.s

# target to generate assembly for a file
libzlog/src/rotater.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/rotater.c.s
.PHONY : libzlog/src/rotater.c.s

libzlog/src/rule.o: libzlog/src/rule.c.o
.PHONY : libzlog/src/rule.o

# target to build an object file
libzlog/src/rule.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/rule.c.o
.PHONY : libzlog/src/rule.c.o

libzlog/src/rule.i: libzlog/src/rule.c.i
.PHONY : libzlog/src/rule.i

# target to preprocess a source file
libzlog/src/rule.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/rule.c.i
.PHONY : libzlog/src/rule.c.i

libzlog/src/rule.s: libzlog/src/rule.c.s
.PHONY : libzlog/src/rule.s

# target to generate assembly for a file
libzlog/src/rule.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/rule.c.s
.PHONY : libzlog/src/rule.c.s

libzlog/src/spec.o: libzlog/src/spec.c.o
.PHONY : libzlog/src/spec.o

# target to build an object file
libzlog/src/spec.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/spec.c.o
.PHONY : libzlog/src/spec.c.o

libzlog/src/spec.i: libzlog/src/spec.c.i
.PHONY : libzlog/src/spec.i

# target to preprocess a source file
libzlog/src/spec.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/spec.c.i
.PHONY : libzlog/src/spec.c.i

libzlog/src/spec.s: libzlog/src/spec.c.s
.PHONY : libzlog/src/spec.s

# target to generate assembly for a file
libzlog/src/spec.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/spec.c.s
.PHONY : libzlog/src/spec.c.s

libzlog/src/thread.o: libzlog/src/thread.c.o
.PHONY : libzlog/src/thread.o

# target to build an object file
libzlog/src/thread.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/thread.c.o
.PHONY : libzlog/src/thread.c.o

libzlog/src/thread.i: libzlog/src/thread.c.i
.PHONY : libzlog/src/thread.i

# target to preprocess a source file
libzlog/src/thread.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/thread.c.i
.PHONY : libzlog/src/thread.c.i

libzlog/src/thread.s: libzlog/src/thread.c.s
.PHONY : libzlog/src/thread.s

# target to generate assembly for a file
libzlog/src/thread.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/thread.c.s
.PHONY : libzlog/src/thread.c.s

libzlog/src/zc_arraylist.o: libzlog/src/zc_arraylist.c.o
.PHONY : libzlog/src/zc_arraylist.o

# target to build an object file
libzlog/src/zc_arraylist.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_arraylist.c.o
.PHONY : libzlog/src/zc_arraylist.c.o

libzlog/src/zc_arraylist.i: libzlog/src/zc_arraylist.c.i
.PHONY : libzlog/src/zc_arraylist.i

# target to preprocess a source file
libzlog/src/zc_arraylist.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_arraylist.c.i
.PHONY : libzlog/src/zc_arraylist.c.i

libzlog/src/zc_arraylist.s: libzlog/src/zc_arraylist.c.s
.PHONY : libzlog/src/zc_arraylist.s

# target to generate assembly for a file
libzlog/src/zc_arraylist.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_arraylist.c.s
.PHONY : libzlog/src/zc_arraylist.c.s

libzlog/src/zc_hashtable.o: libzlog/src/zc_hashtable.c.o
.PHONY : libzlog/src/zc_hashtable.o

# target to build an object file
libzlog/src/zc_hashtable.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_hashtable.c.o
.PHONY : libzlog/src/zc_hashtable.c.o

libzlog/src/zc_hashtable.i: libzlog/src/zc_hashtable.c.i
.PHONY : libzlog/src/zc_hashtable.i

# target to preprocess a source file
libzlog/src/zc_hashtable.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_hashtable.c.i
.PHONY : libzlog/src/zc_hashtable.c.i

libzlog/src/zc_hashtable.s: libzlog/src/zc_hashtable.c.s
.PHONY : libzlog/src/zc_hashtable.s

# target to generate assembly for a file
libzlog/src/zc_hashtable.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_hashtable.c.s
.PHONY : libzlog/src/zc_hashtable.c.s

libzlog/src/zc_profile.o: libzlog/src/zc_profile.c.o
.PHONY : libzlog/src/zc_profile.o

# target to build an object file
libzlog/src/zc_profile.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_profile.c.o
.PHONY : libzlog/src/zc_profile.c.o

libzlog/src/zc_profile.i: libzlog/src/zc_profile.c.i
.PHONY : libzlog/src/zc_profile.i

# target to preprocess a source file
libzlog/src/zc_profile.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_profile.c.i
.PHONY : libzlog/src/zc_profile.c.i

libzlog/src/zc_profile.s: libzlog/src/zc_profile.c.s
.PHONY : libzlog/src/zc_profile.s

# target to generate assembly for a file
libzlog/src/zc_profile.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_profile.c.s
.PHONY : libzlog/src/zc_profile.c.s

libzlog/src/zc_util.o: libzlog/src/zc_util.c.o
.PHONY : libzlog/src/zc_util.o

# target to build an object file
libzlog/src/zc_util.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_util.c.o
.PHONY : libzlog/src/zc_util.c.o

libzlog/src/zc_util.i: libzlog/src/zc_util.c.i
.PHONY : libzlog/src/zc_util.i

# target to preprocess a source file
libzlog/src/zc_util.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_util.c.i
.PHONY : libzlog/src/zc_util.c.i

libzlog/src/zc_util.s: libzlog/src/zc_util.c.s
.PHONY : libzlog/src/zc_util.s

# target to generate assembly for a file
libzlog/src/zc_util.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zc_util.c.s
.PHONY : libzlog/src/zc_util.c.s

libzlog/src/zlog.o: libzlog/src/zlog.c.o
.PHONY : libzlog/src/zlog.o

# target to build an object file
libzlog/src/zlog.c.o:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zlog.c.o
.PHONY : libzlog/src/zlog.c.o

libzlog/src/zlog.i: libzlog/src/zlog.c.i
.PHONY : libzlog/src/zlog.i

# target to preprocess a source file
libzlog/src/zlog.c.i:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zlog.c.i
.PHONY : libzlog/src/zlog.c.i

libzlog/src/zlog.s: libzlog/src/zlog.c.s
.PHONY : libzlog/src/zlog.s

# target to generate assembly for a file
libzlog/src/zlog.c.s:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(MAKE) $(MAKESILENT) -f com_zlog/CMakeFiles/my_zlog.dir/build.make com_zlog/CMakeFiles/my_zlog.dir/libzlog/src/zlog.c.s
.PHONY : libzlog/src/zlog.c.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... my_zlog"
	@echo "... demo_zlog.o"
	@echo "... demo_zlog.i"
	@echo "... demo_zlog.s"
	@echo "... libzlog/src/buf.o"
	@echo "... libzlog/src/buf.i"
	@echo "... libzlog/src/buf.s"
	@echo "... libzlog/src/category.o"
	@echo "... libzlog/src/category.i"
	@echo "... libzlog/src/category.s"
	@echo "... libzlog/src/category_table.o"
	@echo "... libzlog/src/category_table.i"
	@echo "... libzlog/src/category_table.s"
	@echo "... libzlog/src/conf.o"
	@echo "... libzlog/src/conf.i"
	@echo "... libzlog/src/conf.s"
	@echo "... libzlog/src/event.o"
	@echo "... libzlog/src/event.i"
	@echo "... libzlog/src/event.s"
	@echo "... libzlog/src/format.o"
	@echo "... libzlog/src/format.i"
	@echo "... libzlog/src/format.s"
	@echo "... libzlog/src/level.o"
	@echo "... libzlog/src/level.i"
	@echo "... libzlog/src/level.s"
	@echo "... libzlog/src/level_list.o"
	@echo "... libzlog/src/level_list.i"
	@echo "... libzlog/src/level_list.s"
	@echo "... libzlog/src/lockfile.o"
	@echo "... libzlog/src/lockfile.i"
	@echo "... libzlog/src/lockfile.s"
	@echo "... libzlog/src/mdc.o"
	@echo "... libzlog/src/mdc.i"
	@echo "... libzlog/src/mdc.s"
	@echo "... libzlog/src/record.o"
	@echo "... libzlog/src/record.i"
	@echo "... libzlog/src/record.s"
	@echo "... libzlog/src/record_table.o"
	@echo "... libzlog/src/record_table.i"
	@echo "... libzlog/src/record_table.s"
	@echo "... libzlog/src/rotater.o"
	@echo "... libzlog/src/rotater.i"
	@echo "... libzlog/src/rotater.s"
	@echo "... libzlog/src/rule.o"
	@echo "... libzlog/src/rule.i"
	@echo "... libzlog/src/rule.s"
	@echo "... libzlog/src/spec.o"
	@echo "... libzlog/src/spec.i"
	@echo "... libzlog/src/spec.s"
	@echo "... libzlog/src/thread.o"
	@echo "... libzlog/src/thread.i"
	@echo "... libzlog/src/thread.s"
	@echo "... libzlog/src/zc_arraylist.o"
	@echo "... libzlog/src/zc_arraylist.i"
	@echo "... libzlog/src/zc_arraylist.s"
	@echo "... libzlog/src/zc_hashtable.o"
	@echo "... libzlog/src/zc_hashtable.i"
	@echo "... libzlog/src/zc_hashtable.s"
	@echo "... libzlog/src/zc_profile.o"
	@echo "... libzlog/src/zc_profile.i"
	@echo "... libzlog/src/zc_profile.s"
	@echo "... libzlog/src/zc_util.o"
	@echo "... libzlog/src/zc_util.i"
	@echo "... libzlog/src/zc_util.s"
	@echo "... libzlog/src/zlog.o"
	@echo "... libzlog/src/zlog.i"
	@echo "... libzlog/src/zlog.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/ljk/hgfs.link/VMCode/github/A_Linux_Demo/OpenCom/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

